import axios from 'axios';

const tiles = [
  [0,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [0,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],

  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],

  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],

  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],
  
  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],

  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],

  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],

  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],

  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],
  
  [5,5,5,5,5, 5,1,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,6,5,6,6],
  [5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,6, 5,0,0,0,5, 5,0,0,0,5, 5,0,0,0,5, 6,0,0,0,6],
  [5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,6, 5,5,5,5,5, 5,5,5,5,5, 5,5,5,5,5, 6,5,5,5,5],
]
// Room 1
// array[0][0] -> array[0][5]
// array[1][0] -> array[1][5]
// array[2][0] -> array[2][5]
// Room 2
// array[0][0+5] -> array[0][5+5]
// array[1][0+5] -> array[1][5+5]
// array[2][0+5] -> array[2][5+%]

// ....

// Room 10
// array[3][0] -> array[3][5]
// array[4][0] -> array[4][5]
// array[5][0] -> array[5][5]
// Room 11
// array[3][0+5] -> array[3][5+5]
// array[4][0+5] -> array[4][5+5]
// array[5][0+5] -> array[5][5+%]

// 0 - Grass
// 1 - Clay
// 2 - Vertical Fence
// 3 - Horizontal Fence
// 4 - fence joint lower right
// 5 - Rock
// 6 - Tree
// 7 - water
// 10 - Exit

// [2][6] - Forest

const updateTiles = async () => {
  const response =  await axios.get('https://cswk1-mud-game.herokuapp.com/api/adv/rooms');
  const sortedTiles = await response.data.sort((a, b) => a.id - b.id)
  console.log(sortedTiles)
  let w = 99;

  for(let i=29; i>0; i-=3){
    for(let j=49; j>0; j-=5){
      // room 100
      let n_to = sortedTiles[w].n_to === 0 ? false : true;
      let e_to = sortedTiles[w].e_to === 0 ? false : true;
      let s_to = sortedTiles[w].s_to === 0 ? false : true;
      let w_to = sortedTiles[w].w_to === 0 ? false : true;
      if(e_to){
        tiles[i-1][j]=0;
      }
      if(w_to){
        tiles[i-1][j-4]=0;
      }
      if(s_to){
        tiles[i][j-2]=0;
      }
      if(n_to){
        tiles[i-2][j-2]=0;
      }
      w--;
    }
  }
  console.log(tiles)
  return tiles
}

export { updateTiles }